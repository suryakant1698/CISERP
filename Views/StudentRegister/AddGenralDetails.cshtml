@model CMS.Models.DBModels.StudentGenaralDetailsCustomModel
@{
    ViewBag.Title = "AddGenralDetails";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    {
        <div>
            <div style="width:100%;padding-right:5%;padding-left:5%;height:300px">
                <div style="width:50%; float:left; ">
            <h2>Personal Details</h2>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            
                            @Html.RadioButtonFor(model=>model.Gender,"Male") Male
                            @Html.RadioButtonFor(model=>model.Gender,"Female") Female
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div style="width:50%;float:right; ">
                    <h2 >Present Address </h2>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StLocalAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StLocalAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StLocalAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StLocalStateId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            
                           @Html.DropDownListFor(model=>model.StLocalStateId,ViewBag.CountryList as SelectList,"--Select State--",new {@class="form-control" })
                             @Html.ValidationMessageFor(model => model.StLocalStateId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StLocalCityId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                           @Html.DropDownListFor(model=>model.StLocalCityId,new SelectList(" "),"--Select a city--",new {@class="form-control" })
                             @Html.ValidationMessageFor(model => model.StLocalCityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StLocalZip, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StLocalZip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StLocalZip, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div style="width:100%;padding-right:5%;padding-left:5%;height:350px">
                <div style="width:50%;float:left; ">
                    <h2>Contact Details</h2>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                        @Html.DropDownListFor(model=>model.Religion,ViewBag.ReligionList as SelectList,"--Select a religion",new {@class="form-control" })
                                @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cast, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cast, new { htmlAttributes = new { @class = "form-control" } })
                          
                              @Html.ValidationMessageFor(model => model.Cast, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model=>model.Category,ViewBag.CategoryList as SelectList,"--Select a category--",new { @class="form-control" })
                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                          @Html.DropDownListFor(model=>model.BloodGroup,ViewBag.BloodGrouplist as SelectList,"--Select  a bloodgroup--",new {@class="form-control" })
                            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div style="width:50%;float:right; ">
<h2>Permanent Address</h2>
                    <input type="checkbox" id="CopyCheckBox" />Same as current address
                    <div class="form-group">
                        @Html.LabelFor(model => model.StPerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StPerAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StPerAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StPerStateId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.StPerStateId, ViewBag.CountryList as SelectList, "--Select State--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StPerStateId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StPerCityId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model=>model.StPerCityId,new SelectList(" "),"--Select a city--",new {@class="form-control" })
                              @Html.ValidationMessageFor(model => model.StPerCityId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.StPerZip, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StPerZip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StPerZip, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div style="padding-left:50%">
            <input type="submit" value="Submit" class="btn btn-primary"  />
        </div>
    }
}

<div>
</div>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#StPerStateId').change(function () {
            $.get("/StudentRegister/GetCities", { stateId: $('#StPerStateId').val() }, function (data) {
                $('#StPerCityId').empty();
                $('#StPerCityId').append("<option value='0'>--Select a  city--</option>");
                $.each(data, function (index, row) {
                    $('#StPerCityId').append("<option value='" +row.Id+ "'>" + row.CityName + "</option>")
                });
            });
        });
        $('#StLocalStateId').change(function () {
            $.get("/StudentRegister/GetCities", { stateId: $('#StLocalStateId').val() }, function (data) {
                $('#StLocalCityId').empty();
                $('#StLocalCityId').append("<option value='0'>--Select a  city--</option>");
                $.each(data, function (index, row) {
                    $('#StLocalCityId').append("<option value='" + row.Id + "'>" + row.CityName + "</option>")
                });
            });
        });
        $('#CopyCheckBox').change(function () {
            if(($('#CopyCheckBox').prop('checked')))
            {
                console.log($('#StLocalAddress').val());
                $('#StPerAddress').val($('#StLocalAddress').val());
                $('#StPerZip').val($('#StLocalZip').val());
                $('#StPerStateId').val($('#StLocalStateId').val());
                $.get("/StudentRegister/GetCities", { stateId: $('#StPerStateId').val() }, function (data) {
                    $('#StPerCityId').empty();
                    $('#StPerCityId').append("<option value='0'>--Select a  city--</option>");
                    $.each(data, function (index, row) {
                        $('#StPerCityId').append("<option value='" + row.Id + "'>" + row.CityName + "</option>")
                    });
                    $('#StPerCityId').val($('#StLocalCityId').val());
                });
                
            }
        });
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
